-- VHDL Entity ece411.CacheBlock.symbol
--
-- Created:
--          by - jpatel71.stdt (dcllnx26.ews.illinois.edu)
--          at - 23:55:12 11/09/10
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.NUMERIC_STD.all;
USE ieee.std_logic_1164.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY CacheBlock IS
   PORT( 
      D_Address     : IN     lc3b_word;
      D_DATAOUT     : IN     lc3b_word;
      D_MREAD_L     : IN     std_logic;
      D_MWRITEH_L   : IN     std_logic;
      D_MWRITEL_L   : IN     std_logic;
      I_DATAAddress : IN     lc3b_word;
      I_MREAD_L     : IN     std_logic;
      clk           : IN     std_logic;
      reset_l       : IN     std_logic;
      D_DATAIN      : OUT    lc3b_word;
      D_MRESP_H     : OUT    STD_LOGIC;
      I_DATAIN      : OUT    LC3B_WORD;
      I_MRESP_H     : OUT    std_logic
   );

-- Declarations

END CacheBlock ;

--
-- VHDL Architecture ece411.CacheBlock.struct
--
-- Created:
--          by - jpatel71.stdt (dcllnx26.ews.illinois.edu)
--          at - 23:55:12 11/09/10
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.NUMERIC_STD.all;
USE ieee.std_logic_1164.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

LIBRARY ece411;
LIBRARY mp3lib;

ARCHITECTURE struct OF CacheBlock IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL D_PMADDRESS : lc3b_word;
   SIGNAL D_PMDATAOUT : lc3b_oword;
   SIGNAL D_PMREAD_L  : std_logic;
   SIGNAL D_PMRESP_H  : std_logic;
   SIGNAL D_PMWRITE_L : std_logic;
   SIGNAL D_WDATA     : lc3b_oword;
   SIGNAL I_PMADDRESS : lc3b_word;
   SIGNAL I_PMDATAOUT : lc3b_oword;
   SIGNAL I_PMREAD_L  : std_logic;
   SIGNAL I_PMRESP_H  : std_logic;
   SIGNAL I_PMWRITE_L : std_logic;
   SIGNAL I_WDATA     : lc3b_oword;
   SIGNAL ONE         : std_logic;
   SIGNAL ONES        : lc3b_word;
   SIGNAL PM_ADDRESS  : LC3B_WORD;
   SIGNAL PM_DATAIN   : LC3B_OWORD;
   SIGNAL PM_DATAOUT  : LC3B_OWORD;
   SIGNAL PM_MREAD_L  : STD_LOGIC;
   SIGNAL PM_MRESP_H  : STD_LOGIC;
   SIGNAL PM_MWRITE_L : STD_LOGIC;


   -- Component Declarations
   COMPONENT Arbiter
   PORT (
      D_PMADDRESS : IN     lc3b_word ;
      D_PMDATAOUT : IN     lc3b_oword ;
      D_PMREAD_L  : IN     std_logic ;
      D_PMWRITE_L : IN     std_logic ;
      I_PMADDRESS : IN     lc3b_word ;
      I_PMDATAOUT : IN     lc3b_oword ;
      I_PMREAD_L  : IN     std_logic ;
      I_PMWRITE_L : IN     std_logic ;
      PM_DATAOUT  : IN     LC3B_OWORD ;
      PM_MRESP_H  : IN     STD_LOGIC ;
      clk         : IN     std_logic ;
      reset_l     : IN     std_logic ;
      D_PMRESP_H  : OUT    std_logic ;
      D_WDATA     : OUT    lc3b_oword ;
      I_PMRESP_H  : OUT    std_logic ;
      I_WDATA     : OUT    lc3b_oword ;
      PM_ADDRESS  : OUT    LC3B_WORD ;
      PM_DATAIN   : OUT    LC3B_OWORD ;
      PM_MREAD_L  : OUT    STD_LOGIC ;
      PM_MWRITE_L : OUT    STD_LOGIC 
   );
   END COMPONENT;
   COMPONENT D_Mapped_Cache
   PORT (
      Address   : IN     lc3b_word ;
      DataOut   : IN     lc3b_word ;
      MREAD_L   : IN     std_logic ;
      PMDATAIN  : IN     lc3b_oword ;
      PMRESP_H  : IN     std_logic ;
      clk       : IN     std_logic ;
      mwriteh_l : IN     std_logic ;
      mwritel_l : IN     std_logic ;
      reset_l   : IN     std_logic ;
      MRESP_H   : OUT    std_logic ;
      PMADDRESS : OUT    lc3b_word ;
      PMDATAOUT : OUT    lc3b_oword ;
      PMREAD_L  : OUT    std_logic ;
      PMWRITE_L : OUT    std_logic ;
      datain    : OUT    lc3b_word 
   );
   END COMPONENT;
   COMPONENT DRAM128
   PORT (
      ADDRESS  : IN     LC3B_WORD ;
      DATAIN   : IN     LC3B_OWORD ;
      MREAD_L  : IN     STD_LOGIC ;
      MWRITE_L : IN     STD_LOGIC ;
      RESET_L  : IN     STD_LOGIC ;
      DATAOUT  : OUT    LC3B_OWORD ;
      MRESP_H  : OUT    STD_LOGIC 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : Arbiter USE ENTITY ece411.Arbiter;
   FOR ALL : DRAM128 USE ENTITY mp3lib.DRAM128;
   FOR ALL : D_Mapped_Cache USE ENTITY ece411.D_Mapped_Cache;
   -- pragma synthesis_on


BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 1 ONE
   --
   ONE <= '1';
   ONES <= x"FFFF";                                     


   -- Instance port mappings.
   theArbiter : Arbiter
      PORT MAP (
         D_PMADDRESS => D_PMADDRESS,
         D_PMDATAOUT => D_PMDATAOUT,
         D_PMREAD_L  => D_PMREAD_L,
         D_PMWRITE_L => D_PMWRITE_L,
         I_PMADDRESS => I_PMADDRESS,
         I_PMDATAOUT => I_PMDATAOUT,
         I_PMREAD_L  => I_PMREAD_L,
         I_PMWRITE_L => I_PMWRITE_L,
         PM_DATAOUT  => PM_DATAOUT,
         PM_MRESP_H  => PM_MRESP_H,
         clk         => clk,
         reset_l     => reset_l,
         D_PMRESP_H  => D_PMRESP_H,
         D_WDATA     => D_WDATA,
         I_PMRESP_H  => I_PMRESP_H,
         I_WDATA     => I_WDATA,
         PM_ADDRESS  => PM_ADDRESS,
         PM_DATAIN   => PM_DATAIN,
         PM_MREAD_L  => PM_MREAD_L,
         PM_MWRITE_L => PM_MWRITE_L
      );
   D_L1Cache : D_Mapped_Cache
      PORT MAP (
         Address   => D_Address,
         DataOut   => D_DATAOUT,
         MREAD_L   => D_MREAD_L,
         PMDATAIN  => D_WDATA,
         PMRESP_H  => D_PMRESP_H,
         clk       => clk,
         mwriteh_l => D_MWRITEH_L,
         mwritel_l => D_MWRITEL_L,
         reset_l   => reset_l,
         MRESP_H   => D_MRESP_H,
         PMADDRESS => D_PMADDRESS,
         PMDATAOUT => D_PMDATAOUT,
         PMREAD_L  => D_PMREAD_L,
         PMWRITE_L => D_PMWRITE_L,
         datain    => D_DATAIN
      );
   I_L1Cache : D_Mapped_Cache
      PORT MAP (
         Address   => I_DATAAddress,
         DataOut   => ONES,
         MREAD_L   => I_MREAD_L,
         PMDATAIN  => I_WDATA,
         PMRESP_H  => I_PMRESP_H,
         clk       => clk,
         mwriteh_l => ONE,
         mwritel_l => ONE,
         reset_l   => reset_l,
         MRESP_H   => I_MRESP_H,
         PMADDRESS => I_PMADDRESS,
         PMDATAOUT => I_PMDATAOUT,
         PMREAD_L  => I_PMREAD_L,
         PMWRITE_L => I_PMWRITE_L,
         datain    => I_DATAIN
      );
   U_0 : DRAM128
      PORT MAP (
         ADDRESS  => PM_ADDRESS,
         DATAIN   => PM_DATAIN,
         MREAD_L  => PM_MREAD_L,
         MWRITE_L => PM_MWRITE_L,
         RESET_L  => reset_l,
         DATAOUT  => PM_DATAOUT,
         MRESP_H  => PM_MRESP_H
      );

END struct;
