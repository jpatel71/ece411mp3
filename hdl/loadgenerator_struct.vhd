-- VHDL Entity ece411.LoadGenerator.interface
--
-- Created:
--          by - bjohns38.stdt (gllnx4.ews.illinois.edu)
--          at - 21:15:34 11/11/10
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.NUMERIC_STD.all;
USE ieee.std_logic_1164.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY LoadGenerator IS
   PORT( 
      D_MREAD_L   : IN     std_logic;
      D_MRESP_H   : IN     std_logic;
      D_MWRITEH_L : IN     std_logic;
      D_MWRITEL_L : IN     std_logic;
      I_MRESP_H   : IN     std_logic;
      clk         : IN     std_logic;
      LoadOut     : OUT    std_logic
   );

-- Declarations

END LoadGenerator ;

--
-- VHDL Architecture ece411.LoadGenerator.struct
--
-- Created:
--          by - bjohns38.stdt (gllnx4.ews.illinois.edu)
--          at - 21:15:34 11/11/10
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.NUMERIC_STD.all;
USE ieee.std_logic_1164.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

LIBRARY mp3lib;

ARCHITECTURE struct OF LoadGenerator IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL F1      : STD_LOGIC;
   SIGNAL accessN : STD_LOGIC;


   -- Component Declarations
   COMPONENT AND2
   PORT (
      A : IN     STD_LOGIC ;
      B : IN     STD_LOGIC ;
      F : OUT    STD_LOGIC 
   );
   END COMPONENT;
   COMPONENT MUX2_1
   PORT (
      A   : IN     STD_LOGIC ;
      B   : IN     STD_LOGIC ;
      SEL : IN     STD_LOGIC ;
      F   : OUT    STD_LOGIC 
   );
   END COMPONENT;
   COMPONENT NAND3
   PORT (
      A : IN     STD_LOGIC ;
      B : IN     STD_LOGIC ;
      C : IN     STD_LOGIC ;
      F : OUT    STD_LOGIC 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : AND2 USE ENTITY mp3lib.AND2;
   FOR ALL : MUX2_1 USE ENTITY mp3lib.MUX2_1;
   FOR ALL : NAND3 USE ENTITY mp3lib.NAND3;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   DAND : AND2
      PORT MAP (
         A => I_MRESP_H,
         B => D_MRESP_H,
         F => F1
      );
   U_0 : MUX2_1
      PORT MAP (
         A   => I_MRESP_H,
         B   => F1,
         SEL => accessN,
         F   => LoadOut
      );
   AccessNAND : NAND3
      PORT MAP (
         A => D_MREAD_L,
         B => D_MWRITEH_L,
         C => D_MWRITEL_L,
         F => accessN
      );

END struct;
